plugins {
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  id 'java'
  id 'me.champeau.jmh' version '0.6.8'
}

configurations {
    includeInJar {
      transitive = false
    }
}

dependencies {
    includeInJar group: 'com.google.protobuf', name: 'protobuf-java', version: dependencyVersionProtobuf
    includeInJar group: 'org.openstreetmap.osmosis', name: 'osmosis-core', version: dependencyVersionOsmosis
    includeInJar group: 'org.openstreetmap.osmosis', name: 'osmosis-pbf', version: dependencyVersionOsmosis
    includeInJar group: 'org.openstreetmap.osmosis', name: 'osmosis-pbf2', version: dependencyVersionOsmosis
    includeInJar group: 'org.openstreetmap.osmosis', name: 'osmosis-osm-binary', version: dependencyVersionOsmosis

    implementation group: 'com.google.guava', name: 'guava', version: dependencyVersionGuava
    implementation group: 'commons-io', name: 'commons-io', version: dependencyVersionCommonsIo
    implementation group: 'org.apache.spark', name: 'spark-core_2.12', version: dependencyVersionSpark
    implementation group: 'org.apache.spark', name: 'spark-sql_2.12', version: dependencyVersionSpark

    jmh group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: dependencyVersionJmh

    configurations.implementation.extendsFrom(configurations.includeInJar)
}

jmh {
  jmhVersion = dependencyVersionJmh
}

shadowJar {
  archiveAppendix = 'fatjar'
  relocate('com.google.protobuf', 'io.github.igorgatis.spark.osmpbf.com.google.protobuf')
  configurations = [project.configurations.includeInJar]
}

artifacts {
  archives shadowJar
}
